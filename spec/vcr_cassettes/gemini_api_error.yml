---
http_interactions:
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=invalid-key
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score between 0 and 1\"\n    },\n    \"reasoning\": {\n      \"type\":
        \"string\",\n      \"description\": \"Explanation for the sentiment\"\n    }\n  },\n  \"required\":
        [\n    \"sentiment\",\n    \"confidence\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Analyze the sentiment of a text"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"Test with invalid key\"\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`."}]}]}'
    headers:
      User-Agent:
      - Faraday v2.14.0
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 400
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Fri, 03 Oct 2025 20:44:44 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '278'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=31
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 400,
            "message": "API key not valid. Please pass a valid API key.",
            "status": "INVALID_ARGUMENT",
            "details": [
              {
                "@type": "type.googleapis.com/google.rpc.ErrorInfo",
                "reason": "API_KEY_INVALID",
                "domain": "googleapis.com",
                "metadata": {
                  "service": "generativelanguage.googleapis.com"
                }
              },
              {
                "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
                "locale": "en-US",
                "message": "API key not valid. Please pass a valid API key."
              }
            ]
          }
        }
  recorded_at: Fri, 03 Oct 2025 20:44:44 GMT
recorded_with: VCR 6.3.1
