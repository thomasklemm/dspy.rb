---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\":
        \"Reasoning about what to do next, considering the history and observations.\"\n    },\n    \"action\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"github_list_issues\",\n        \"github_list_prs\",\n        \"github_get_issue\",\n        \"github_get_pr\",\n        \"github_api_request\",\n        \"finish\"\n      ],\n      \"description\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"\n    },\n    \"action_input\":
        {\n      \"oneOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\":
        \"object\",\n          \"propertyNames\": {\n            \"type\": \"string\"\n          },\n          \"additionalProperties\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        \"A mapping where keys are strings and values are strings\"\n        }\n      ],\n      \"description\":
        \"Input for the chosen action. If action is a tool name, this MUST be a JSON
        object matching the tool''s schema. If action is \\\"finish\\\", this field
        MUST contain the final result based on processing the input data.\"\n    }\n  },\n  \"required\":
        [\n    \"thought\",\n    \"action\",\n    \"action_input\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open issues
        for this repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [],\n  \"available_tools\": [\n    {\n      \"name\": \"github_list_issues\",\n      \"description\":
        \"List GitHub issues with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_issues\",\n        \"description\": \"List GitHub issues with
        optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignee\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter assignee (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_list_prs\",\n      \"description\":
        \"List GitHub pull requests with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_prs\",\n        \"description\": \"List GitHub pull requests
        with optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"merged\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"author\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter author (optional)\"\n            },\n            \"base\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter base (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_get_issue\",\n      \"description\":
        \"Get details of a specific GitHub issue\",\n      \"schema\": {\n        \"name\":
        \"github_get_issue\",\n        \"description\": \"Get details of a specific
        GitHub issue\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"issue_number\": {\n              \"type\": \"integer\",\n              \"description\":
        \"Parameter issue_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_get_pr\",\n      \"description\": \"Get details of a specific GitHub
        pull request\",\n      \"schema\": {\n        \"name\": \"github_get_pr\",\n        \"description\":
        \"Get details of a specific GitHub pull request\",\n        \"parameters\":
        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"pr_number\":
        {\n              \"type\": \"integer\",\n              \"description\": \"Parameter
        pr_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_api_request\",\n      \"description\": \"Make an arbitrary GitHub
        API request\",\n      \"schema\": {\n        \"name\": \"github_api_request\",\n        \"description\":
        \"Make an arbitrary GitHub API request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"endpoint\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter endpoint\"\n            },\n            \"method\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        method (optional)\"\n            },\n            \"fields\": {\n              \"type\":
        \"object\",\n              \"propertyNames\": {\n                \"type\":
        \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter fields
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"endpoint\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"thought\": \"Reasoning
        about what to do next, considering the history and observations.\",\n  \"action\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\",\n  \"action_input\":
        \"example value\"\n}\n```\n\nRequired fields: thought, action, action_input\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '12168'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Sep 2025 09:42:29 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '2083'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2276'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '197269'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 819ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 984154f1d90d1d6c-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CJGJ1wb63pqSZRH0e6cGpxW7ZEhBd",
          "object": "chat.completion",
          "created": 1758706947,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"Since the task is to list the open issues for the repository 'microsoft/vscode', I should use the 'github_list_issues' tool with the 'state' parameter set to 'open' to get the relevant issues.\",\n  \"action\": \"github_list_issues\",\n  \"action_input\": {\n    \"state\": \"open\",\n    \"repo\": \"microsoft/vscode\"\n  }\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 2270,
            "completion_tokens": 96,
            "total_tokens": 2366,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Wed, 24 Sep 2025 09:42:29 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts, actions, and observations.\"\n    },\n    \"observation\": {\n      \"type\":
        \"string\",\n      \"description\": \"The result from the last action\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"observation\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"interpretation\": {\n      \"type\":
        \"string\",\n      \"description\": \"Interpretation of the observation\"\n    },\n    \"next_step\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"finish\"\n      ],\n      \"description\":
        \"What to do next: ''#<DSPy::NextStep::Continue>'' or ''#<DSPy::NextStep::Finish>''\"\n    }\n  },\n  \"required\":
        [\n    \"interpretation\",\n    \"next_step\"\n  ]\n}\n```\n\nAll interactions
        will be structured in the following way, with the appropriate values filled
        in.\n## Input values\n```json\n{input_values}\n```\n## Output values\nRespond
        exclusively with the output schema fields in the json block below.\n```json\n{output_values}\n```\n\nIn
        adhering to this structure, your objective is: Process the observation from
        a tool and decide what to do next."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open issues
        for this repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [\n    {\n      \"step\": 1,\n      \"thought\": \"Since the task is to list
        the open issues for the repository ''microsoft/vscode'', I should use the
        ''github_list_issues'' tool with the ''state'' parameter set to ''open'' to
        get the relevant issues.\",\n      \"action\": \"github_list_issues\",\n      \"action_input\":
        {\n        \"state\": \"open\",\n        \"repo\": \"microsoft/vscode\"\n      },\n      \"observation\":
        \"Found 20 issue(s):\\n#268134: Very bad performance , crashes and deletion
        of the program (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268134\\n\\n#268132:
        Enhance References View (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268132\\n\\n#268129:
        Just hangs when it thinks its proceding. (OPEN)\\n  Labels: info-needed\\n  URL:
        https://github.com/microsoft/vscode/issues/268129\\n\\n#268128: shows token
        expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268128\\n\\n#268127:
        shows token expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268127\\n\\n#268125:
        Add Copy Error Message to IntelliSense mouse hover tooltip (OPEN)\\n  Labels:
        triage-needed\\n  Assignees: rzhao271\\n  URL: https://github.com/microsoft/vscode/issues/268125\\n\\n#268124:
        BUG REWRITE CODE (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268124\\n\\n#268121:
        Disable extension button disappearing (OPEN)\\n  Assignees: sandy081\\n  URL:
        https://github.com/microsoft/vscode/issues/268121\\n\\n#268120: The same text
        selection highlight does not work in certain cases (OPEN)\\n  Labels: triage-needed\\n  Assignees:
        aeschli\\n  URL: https://github.com/microsoft/vscode/issues/268120\\n\\n#268118:
        unable to use any features of copilot (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268118\\n\\n#268115: Trigger NES
        when switching files (OPEN)\\n  Labels: feature-request, NES\\n  Assignees:
        ulugbekna\\n  URL: https://github.com/microsoft/vscode/issues/268115\\n\\n#268114:
        Reason: token expired or invalid: 403 (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268114\\n\\n#268113: Integrated
        terminal activates base conda environment instead of configured environment
        (OPEN)\\n  Assignees: meganrogge\\n  URL: https://github.com/microsoft/vscode/issues/268113\\n\\n#268112:
        Search with New Line Freezing (OPEN)\\n  Assignees: osortega\\n  URL: https://github.com/microsoft/vscode/issues/268112\\n\\n#268111:
        Add API / command for showing a specific local chat session (OPEN)\\n  Assignees:
        roblourens, mjbvz\\n  URL: https://github.com/microsoft/vscode/issues/268111\\n\\n#268108:
        Agent creates corrupted file on every file creation (OPEN)\\n  Assignees:
        roblourens\\n  URL: https://github.com/microsoft/vscode/issues/268108\\n\\n#268107:
        Show stop button while waiting for user confirmation of tool (OPEN)\\n  Assignees:
        roblourens, justschen\\n  URL: https://github.com/microsoft/vscode/issues/268107\\n\\n#268104:
        Fetch tool seems to have cached a 404 for a page (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268104\\n\\n#268103: Fetch tool
        should better indicate in UI when the request fails (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268103\\n\\n#268102:
        Chat fetch tool can''t read content from my private GitHub repos (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268102\\n\"\n    }\n  ],\n  \"observation\":
        \"Found 20 issue(s):\\n#268134: Very bad performance , crashes and deletion
        of the program (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268134\\n\\n#268132:
        Enhance References View (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268132\\n\\n#268129:
        Just hangs when it thinks its proceding. (OPEN)\\n  Labels: info-needed\\n  URL:
        https://github.com/microsoft/vscode/issues/268129\\n\\n#268128: shows token
        expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268128\\n\\n#268127:
        shows token expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268127\\n\\n#268125:
        Add Copy Error Message to IntelliSense mouse hover tooltip (OPEN)\\n  Labels:
        triage-needed\\n  Assignees: rzhao271\\n  URL: https://github.com/microsoft/vscode/issues/268125\\n\\n#268124:
        BUG REWRITE CODE (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268124\\n\\n#268121:
        Disable extension button disappearing (OPEN)\\n  Assignees: sandy081\\n  URL:
        https://github.com/microsoft/vscode/issues/268121\\n\\n#268120: The same text
        selection highlight does not work in certain cases (OPEN)\\n  Labels: triage-needed\\n  Assignees:
        aeschli\\n  URL: https://github.com/microsoft/vscode/issues/268120\\n\\n#268118:
        unable to use any features of copilot (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268118\\n\\n#268115: Trigger NES
        when switching files (OPEN)\\n  Labels: feature-request, NES\\n  Assignees:
        ulugbekna\\n  URL: https://github.com/microsoft/vscode/issues/268115\\n\\n#268114:
        Reason: token expired or invalid: 403 (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268114\\n\\n#268113: Integrated
        terminal activates base conda environment instead of configured environment
        (OPEN)\\n  Assignees: meganrogge\\n  URL: https://github.com/microsoft/vscode/issues/268113\\n\\n#268112:
        Search with New Line Freezing (OPEN)\\n  Assignees: osortega\\n  URL: https://github.com/microsoft/vscode/issues/268112\\n\\n#268111:
        Add API / command for showing a specific local chat session (OPEN)\\n  Assignees:
        roblourens, mjbvz\\n  URL: https://github.com/microsoft/vscode/issues/268111\\n\\n#268108:
        Agent creates corrupted file on every file creation (OPEN)\\n  Assignees:
        roblourens\\n  URL: https://github.com/microsoft/vscode/issues/268108\\n\\n#268107:
        Show stop button while waiting for user confirmation of tool (OPEN)\\n  Assignees:
        roblourens, justschen\\n  URL: https://github.com/microsoft/vscode/issues/268107\\n\\n#268104:
        Fetch tool seems to have cached a 404 for a page (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268104\\n\\n#268103: Fetch tool
        should better indicate in UI when the request fails (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268103\\n\\n#268102:
        Chat fetch tool can''t read content from my private GitHub repos (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268102\\n\"\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"interpretation\": \"Interpretation
        of the observation\",\n  \"next_step\": \"What to do next: ''#<DSPy::NextStep::Continue>''
        or ''#<DSPy::NextStep::Finish>''\"\n}\n```\n\nRequired fields: interpretation,
        next_step\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings,
        no trailing commas)\n2. Includes all required fields\n3. Uses the correct
        data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '11009'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Sep 2025 09:42:34 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '1442'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2744'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '197421'
      X-Ratelimit-Reset-Requests:
      - 13.355s
      X-Ratelimit-Reset-Tokens:
      - 773ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 9841550aba3f1d6c-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CJGJ6fa06L6RR5w8aG7mubO72o6tR",
          "object": "chat.completion",
          "created": 1758706952,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"interpretation\": \"A total of 20 open issues were found for the repository 'microsoft/vscode', which include a variety of problems and feature requests, highlighting areas for improvement and user feedback.\",\n  \"next_step\": \"continue\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 2684,
            "completion_tokens": 60,
            "total_tokens": 2744,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Wed, 24 Sep 2025 09:42:34 GMT
- request:
    method: post
    uri: https://collector.newrelic.com/agent_listener/invoke_raw_method?license_key=<NEW_RELIC_LICENSE_KEY>&marshal_format=json&method=log_event_data&protocol_version=17&run_id=BaIQLAf_oT5sADvrtB84K3po071gAAEBAAAnIQEAAKv8AgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAy902gAA71XbW/bNhD+Kwftg1vAsSW/xLaADEgbp3WRuE3iZB/iwKCks8RaIlWSsusE+e87Sm6nZRm2Ocg+CLZE6e654z3PHW8fnFBmmRSO/+AwYxQPCoPa3qEw3GxbgmXo+M7J1ZdtSwVO00mkNruHmmcBa6UyZCkt7D6ICx7R2vn9ajv9uupMP35/dz32hhc37y5m4/Tk4uby08ztD6eziXt+EnvnJ+Oe8/jYdFIZk9/bByfFNaZkYTI9/UxmDc9QG5blju8N+sOBezjq9zxv1KL/naZDi5rFFo1RLMQFj47mTt/rDobIRgfYXw4PeoeD6GB4OOweeN1g1O9H0aA3iuYOSIPpQudMLMhBuDq6vQOFLDQtblAxw6U48nZPTCKLODFk+4qLEMEkdDG9Aq7BSEi5NuUzmaOgZ7pADUupymcKc6m5kWoLjYyHSmq5NO21DmWEjSZMQJPxNIJCV3YbMTdJESys0UVlq0FOZAobWqheIcAGG5AzRVtBaEGjsUAaFoB9G2I0O++UUCbMDlWL4q5CostGOHf+6u7JOwsu8sIcPcyd0u3cOfp17lhHc6cJc8fGVz17Gt3cedwZkoFGtWY7j6eyEBF03ArTG/3Wn8/FL53Dodft+XCDlKmARZCjohxmzCa8CaFiOqG0Mvo0oqCsLZDLMshcyZgyAW8+fxlP35IxgOvLMx8SY3Ltt9tViC2q9fZTjO0q5HblnT79CaXjw1gkpfdLXKJC+qfhhuPmxX46NT+dkQ+fCqofchVr2CS2guzecbHS9E/b6EKMuIhbdcdnLMBU+8DFUh4IxAijvQF1RnVAQ9+W5MZW9orA4PecK4xezfew7nvw//oe1H33fTiOIngv8y2MlSL6nlfqYvk0EaQWKb9CQTTNpCVrItfEPMtMw/PnIJKe0td1kMda85juaVHdJ0x2Bt7+4Pt18EScd9cf4HL82+VkNob3n0/Gr5a1Ok06ng8nXLMgRdotQ+mxvKQ2YugnooU8R6aoeOtoamnQxOetO3xBGrw6GteHGQmCJlkEQ3hIGFMsVQwSHicpXQYiSUQW0sBGKpJwASEqw+wv07TyX3eSoQ7J8v4RuLUIPGJfIcp0UtXZMmNiC0tkplCEjQQvlDlPCfzz+ZxtU1RnKEm5VGT2xuTVWekRM2aKxzGV+3R8VWmUpm4UJnZjlzx9Pms71AcKv5Fd07QfP8VbpEUc4Eqw/aHWeeARDy6RaSn8JxJCdOZizVIe+dBzu6+cvjpFvK5fyge1KENAqF1nXLAUbHelnki5C6juaF9FxADFmispMrQtW2iD1AjLTRdLHhc2kPobzweRYcwEtcQY9w+gWw+AWuEVsThMqhFkSi3wjAuEU4V4//fcJuOKwn7B1tYbpedV+nz8ZQJtsHOrHQXslGU7hkXBQOcY8iUPoZxKIUyYVQBdatLzGJUMUkl5FboJ2ddgfb8/2LoQuUTj49huUUgTkN3jUCpV5LYALF+AANGgS5NOeVe+9G9A7o3OrRPapTZ7RUkDbWT+Q6w3iUWyYdyUpKa8kvqoqvJoCvs5b9lJ9J9z+ZVGGpJFFPsjrjdnl3h9iiQ4lX+NmJWTd8LWlD1GjiLa/p7bK4Ezmoypbb8qxd06xd3un+FVE32Axs7mXEQ8pBqwneZ6UqlnNZqXsghLxlP9ymDrdHaJzu8tM5Z/IA6ZaBg7rEd2w40t3KWSGWRbGj9LlYIP3Hwsguo488poS9r/OIRYfHpBtRgd3T5/WrmzVBL2dPbk/LYgTzkdFegkMhfO493j3e8gg/+m8g4AAA==
    headers:
      Content-Encoding:
      - gzip
      Host:
      - collector.newrelic.com
      Nr-Utilizationmetadata:
      - AQICFgALc2ltYmEubG9jYWwXAAtzaW1iYS5sb2NhbA
      Nr-Utilizationextra:
      - AQARAAUAAAAIAABgAA
      Nr-Session:
      - BaIQLAf_oT5sADvrtB84K3po071gAAEBAAAnIQEAAKv8AgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
      Nr-Agenttags:
      - AX2uHIkGAAlhY2NvdW50SWQABzM5MjY5NjQAEHRydXN0ZWRBY2NvdW50SWQABzM5MjY5NjQAB2FjY291bnQAD0FjY291bnQgMzkyNjk2NA
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - NewRelic-RubyAgent/9.21.0 (ruby 3.3.6 arm64-darwin23) zlib/1.2.12
      Content-Type:
      - application/octet-stream
  response:
    status:
      code: 202
      message: ''
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=UTF-8
      X-Envoy-Upstream-Service-Time:
      - '1'
      Date:
      - Wed, 24 Sep 2025 09:42:36 GMT
      Server:
      - envoy
      Nr-Rate-Limited:
      - allowed
      X-Served-By:
      - cache-mad2200101-MAD
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Wed, 24 Sep 2025 09:42:37 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"step\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\":
        \"Reasoning about what to do next, considering the history and observations.\"\n    },\n    \"action\":
        {\n      \"type\": \"string\",\n      \"enum\": [\n        \"github_list_issues\",\n        \"github_list_prs\",\n        \"github_get_issue\",\n        \"github_get_pr\",\n        \"github_api_request\",\n        \"finish\"\n      ],\n      \"description\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\"\n    },\n    \"action_input\":
        {\n      \"oneOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\":
        \"object\",\n          \"propertyNames\": {\n            \"type\": \"string\"\n          },\n          \"additionalProperties\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        \"A mapping where keys are strings and values are strings\"\n        }\n      ],\n      \"description\":
        \"Input for the chosen action. If action is a tool name, this MUST be a JSON
        object matching the tool''s schema. If action is \\\"finish\\\", this field
        MUST contain the final result based on processing the input data.\"\n    }\n  },\n  \"required\":
        [\n    \"thought\",\n    \"action\",\n    \"action_input\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"task\\\":\\\"List the open issues
        for this repository\\\",\\\"repository\\\":\\\"microsoft/vscode\\\"}\",\n  \"history\":
        [\n    {\n      \"step\": 1,\n      \"thought\": \"Since the task is to list
        the open issues for the repository ''microsoft/vscode'', I should use the
        ''github_list_issues'' tool with the ''state'' parameter set to ''open'' to
        get the relevant issues.\",\n      \"action\": \"github_list_issues\",\n      \"action_input\":
        {\n        \"state\": \"open\",\n        \"repo\": \"microsoft/vscode\"\n      },\n      \"observation\":
        \"Found 20 issue(s):\\n#268134: Very bad performance , crashes and deletion
        of the program (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268134\\n\\n#268132:
        Enhance References View (OPEN)\\n  URL: https://github.com/microsoft/vscode/issues/268132\\n\\n#268129:
        Just hangs when it thinks its proceding. (OPEN)\\n  Labels: info-needed\\n  URL:
        https://github.com/microsoft/vscode/issues/268129\\n\\n#268128: shows token
        expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268128\\n\\n#268127:
        shows token expired (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268127\\n\\n#268125:
        Add Copy Error Message to IntelliSense mouse hover tooltip (OPEN)\\n  Labels:
        triage-needed\\n  Assignees: rzhao271\\n  URL: https://github.com/microsoft/vscode/issues/268125\\n\\n#268124:
        BUG REWRITE CODE (OPEN)\\n  Labels: info-needed\\n  URL: https://github.com/microsoft/vscode/issues/268124\\n\\n#268121:
        Disable extension button disappearing (OPEN)\\n  Assignees: sandy081\\n  URL:
        https://github.com/microsoft/vscode/issues/268121\\n\\n#268120: The same text
        selection highlight does not work in certain cases (OPEN)\\n  Labels: triage-needed\\n  Assignees:
        aeschli\\n  URL: https://github.com/microsoft/vscode/issues/268120\\n\\n#268118:
        unable to use any features of copilot (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268118\\n\\n#268115: Trigger NES
        when switching files (OPEN)\\n  Labels: feature-request, NES\\n  Assignees:
        ulugbekna\\n  URL: https://github.com/microsoft/vscode/issues/268115\\n\\n#268114:
        Reason: token expired or invalid: 403 (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268114\\n\\n#268113: Integrated
        terminal activates base conda environment instead of configured environment
        (OPEN)\\n  Assignees: meganrogge\\n  URL: https://github.com/microsoft/vscode/issues/268113\\n\\n#268112:
        Search with New Line Freezing (OPEN)\\n  Assignees: osortega\\n  URL: https://github.com/microsoft/vscode/issues/268112\\n\\n#268111:
        Add API / command for showing a specific local chat session (OPEN)\\n  Assignees:
        roblourens, mjbvz\\n  URL: https://github.com/microsoft/vscode/issues/268111\\n\\n#268108:
        Agent creates corrupted file on every file creation (OPEN)\\n  Assignees:
        roblourens\\n  URL: https://github.com/microsoft/vscode/issues/268108\\n\\n#268107:
        Show stop button while waiting for user confirmation of tool (OPEN)\\n  Assignees:
        roblourens, justschen\\n  URL: https://github.com/microsoft/vscode/issues/268107\\n\\n#268104:
        Fetch tool seems to have cached a 404 for a page (OPEN)\\n  Assignees: TylerLeonhardt\\n  URL:
        https://github.com/microsoft/vscode/issues/268104\\n\\n#268103: Fetch tool
        should better indicate in UI when the request fails (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268103\\n\\n#268102:
        Chat fetch tool can''t read content from my private GitHub repos (OPEN)\\n  Assignees:
        TylerLeonhardt\\n  URL: https://github.com/microsoft/vscode/issues/268102\\n\"\n    }\n  ],\n  \"available_tools\":
        [\n    {\n      \"name\": \"github_list_issues\",\n      \"description\":
        \"List GitHub issues with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_issues\",\n        \"description\": \"List GitHub issues with
        optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"labels\": {\n              \"type\":
        \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\":
        \"Parameter labels (optional)\"\n            },\n            \"assignee\":
        {\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter assignee (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_list_prs\",\n      \"description\":
        \"List GitHub pull requests with optional filters\",\n      \"schema\": {\n        \"name\":
        \"github_list_prs\",\n        \"description\": \"List GitHub pull requests
        with optional filters\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"state\": {\n              \"type\": \"string\",\n              \"enum\":
        [\n                \"open\",\n                \"closed\",\n                \"merged\",\n                \"all\"\n              ],\n              \"description\":
        \"Parameter state (optional)\"\n            },\n            \"author\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter author (optional)\"\n            },\n            \"base\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter base (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            },\n            \"limit\": {\n              \"type\":
        \"integer\",\n              \"description\": \"Parameter limit (optional)\"\n            }\n          },\n          \"required\":
        []\n        }\n      }\n    },\n    {\n      \"name\": \"github_get_issue\",\n      \"description\":
        \"Get details of a specific GitHub issue\",\n      \"schema\": {\n        \"name\":
        \"github_get_issue\",\n        \"description\": \"Get details of a specific
        GitHub issue\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"issue_number\": {\n              \"type\": \"integer\",\n              \"description\":
        \"Parameter issue_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"issue_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_get_pr\",\n      \"description\": \"Get details of a specific GitHub
        pull request\",\n      \"schema\": {\n        \"name\": \"github_get_pr\",\n        \"description\":
        \"Get details of a specific GitHub pull request\",\n        \"parameters\":
        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"pr_number\":
        {\n              \"type\": \"integer\",\n              \"description\": \"Parameter
        pr_number\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"pr_number\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":
        \"github_api_request\",\n      \"description\": \"Make an arbitrary GitHub
        API request\",\n      \"schema\": {\n        \"name\": \"github_api_request\",\n        \"description\":
        \"Make an arbitrary GitHub API request\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"endpoint\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter endpoint\"\n            },\n            \"method\":
        {\n              \"type\": \"string\",\n              \"description\": \"Parameter
        method (optional)\"\n            },\n            \"fields\": {\n              \"type\":
        \"object\",\n              \"propertyNames\": {\n                \"type\":
        \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"Parameter fields
        (optional)\"\n            },\n            \"repo\": {\n              \"type\":
        [\n                \"string\",\n                \"null\"\n              ],\n              \"description\":
        \"Parameter repo (optional)\"\n            }\n          },\n          \"required\":
        [\n            \"endpoint\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid
        JSON that matches this structure:\n```json\n{\n  \"thought\": \"Reasoning
        about what to do next, considering the history and observations.\",\n  \"action\":
        \"The action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \\\"finish\\\" to provide the final answer.\",\n  \"action_input\":
        \"example value\"\n}\n```\n\nRequired fields: thought, action, action_input\n\nEnsure
        your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2.
        Includes all required fields\n3. Uses the correct data types for each field\n4.
        Is wrapped in ```json``` markdown code blocks\n"}],"temperature":1.0}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '15712'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 24 Sep 2025 09:42:47 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '12597'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '12823'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9997'
      X-Ratelimit-Remaining-Tokens:
      - '196412'
      X-Ratelimit-Reset-Requests:
      - 18.735s
      X-Ratelimit-Reset-Tokens:
      - 1.076s
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 9841551f7d051d6c-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CJGJ8EjRNpyPD1ABSqzguS26kXAjS",
          "object": "chat.completion",
          "created": 1758706954,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"The open issues for the repository 'microsoft/vscode' have been successfully retrieved. I should create a summary of the open issues to provide a concise overview to the user.\",\n  \"action\": \"finish\",\n  \"action_input\": \"Total open issues: 20\\n\\n1. #268134: Very bad performance, crashes and deletion of the program - [Link](https://github.com/microsoft/vscode/issues/268134)\\n2. #268132: Enhance References View - [Link](https://github.com/microsoft/vscode/issues/268132)\\n3. #268129: Just hangs when it thinks its proceeding - [Link](https://github.com/microsoft/vscode/issues/268129)\\n4. #268128: shows token expired - [Link](https://github.com/microsoft/vscode/issues/268128)\\n5. #268127: shows token expired - [Link](https://github.com/microsoft/vscode/issues/268127)\\n6. #268125: Add Copy Error Message to IntelliSense mouse hover tooltip - [Link](https://github.com/microsoft/vscode/issues/268125)\\n7. #268124: BUG REWRITE CODE - [Link](https://github.com/microsoft/vscode/issues/268124)\\n8. #268121: Disable extension button disappearing - [Link](https://github.com/microsoft/vscode/issues/268121)\\n9. #268120: The same text selection highlight does not work in certain cases - [Link](https://github.com/microsoft/vscode/issues/268120)\\n10. #268118: unable to use any features of copilot - [Link](https://github.com/microsoft/vscode/issues/268118)\\n11. #268115: Trigger NES when switching files - [Link](https://github.com/microsoft/vscode/issues/268115)\\n12. #268114: Reason: token expired or invalid: 403 - [Link](https://github.com/microsoft/vscode/issues/268114)\\n13. #268113: Integrated terminal activates base conda environment instead of configured environment - [Link](https://github.com/microsoft/vscode/issues/268113)\\n14. #268112: Search with New Line Freezing - [Link](https://github.com/microsoft/vscode/issues/268112)\\n15. #268111: Add API / command for showing a specific local chat session - [Link](https://github.com/microsoft/vscode/issues/268111)\\n16. #268108: Agent creates corrupted file on every file creation - [Link](https://github.com/microsoft/vscode/issues/268108)\\n17. #268107: Show stop button while waiting for user confirmation of tool - [Link](https://github.com/microsoft/vscode/issues/268107)\\n18. #268104: Fetch tool seems to have cached a 404 for a page - [Link](https://github.com/microsoft/vscode/issues/268104)\\n19. #268103: Fetch tool should better indicate in UI when the request fails - [Link](https://github.com/microsoft/vscode/issues/268103)\\n20. #268102: Chat fetch tool can't read content from my private GitHub repos - [Link](https://github.com/microsoft/vscode/issues/268102)\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 3227,
            "completion_tokens": 708,
            "total_tokens": 3935,
            "prompt_tokens_details": {
              "cached_tokens": 1024,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Wed, 24 Sep 2025 09:42:47 GMT
- request:
    method: post
    uri: https://collector.newrelic.com/agent_listener/invoke_raw_method?license_key=<NEW_RELIC_LICENSE_KEY>&marshal_format=json&method=log_event_data&protocol_version=17&run_id=BaFfKBDiBZwfADvrtBCL5gxo4DTcAAEBAAAnIQEAAR1ZAgQfPOcaAwAGOS4yMS4wAA1NdXN0YWZhS2hhbGlsAAdEU1B5LnJi
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    headers:
      Content-Encoding:
      - gzip
      Host:
      - collector.newrelic.com
      Nr-Utilizationmetadata:
      - AQICFgANTXVzdGFmYUtoYWxpbBcADU11c3RhZmFLaGFsaWw
      Nr-Utilizationextra:
      - AQARAAUAAAAIAABgAA
      Nr-Session:
      - BaFfKBDiBZwfADvrtBCL5gxo4DTcAAEBAAAnIQEAAR1ZAgQfPOcaAwAGOS4yMS4wAA1NdXN0YWZhS2hhbGlsAAdEU1B5LnJi
      Nr-Agenttags:
      - AX2uHIkGAAlhY2NvdW50SWQABzM5MjY5NjQAEHRydXN0ZWRBY2NvdW50SWQABzM5MjY5NjQAB2FjY291bnQAD0FjY291bnQgMzkyNjk2NA
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - NewRelic-RubyAgent/9.21.0 (ruby 3.3.6 arm64-darwin23) zlib/1.2.12
      Content-Type:
      - application/octet-stream
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Date:
      - Fri, 03 Oct 2025 20:39:50 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '0'
      Connection:
      - keep-alive
      Cf-Ray:
      - 988f40484ff1d6a5-IAD
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Nr-Rate-Limited:
      - allowed
      X-Envoy-Upstream-Service-Time:
      - '0'
      Vary:
      - accept-encoding
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Fri, 03 Oct 2025 20:39:50 GMT
recorded_with: VCR 6.3.1
