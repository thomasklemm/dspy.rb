---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"step\",\n          \"observation\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\n\nYour
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"query\\\":\\\"Recommend AI and
        ML courses\\\"}\",\n  \"history\": [],\n  \"available_tools\": [\n    {\n      \"name\":
        \"courses_toolset_search_courses\",\n      \"description\": \"recommend courses
        related to the query\",\n      \"schema\": {\n        \"name\": \"courses_toolset_search_courses\",\n        \"description\":
        \"recommend courses related to the query\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"query\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter query\"\n            }\n          },\n          \"required\":
        [\n            \"query\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```"}],"temperature":1.0,"response_format":{"type":"json_schema","json_schema":{"name":"dspy_output_1759523730","strict":true,"schema":{"type":"object","properties":{"thought":{"type":"string","description":"Reasoning
        about what to do next, considering the history and observations."},"action":{"type":"string","enum":["courses_toolset_search_courses","finish"],"description":"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \"finish\" to provide the final answer."},"action_input":{"type":"string","description":"Input
        for the chosen action. If action is a tool name, this MUST be a JSON object
        matching the tool''s schema. If action is \"finish\", this field MUST contain
        the final result based on processing the input data."}},"required":["thought","action","action_input"],"additionalProperties":false}}}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '5110'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Oct 2025 20:35:33 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '2482'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2652'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '199067'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 279ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 988f39f6dfe3c997-IAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CMgmxStSctXOKH3J1Qn9Lqfd7h9S3",
          "object": "chat.completion",
          "created": 1759523731,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"thought\":\"The input context indicates a request to recommend courses related to AI and ML. Given that the history is empty, I should proceed directly with the available tool that can search for courses based on the provided query. The tool `courses_toolset_search_courses` is suitable for this task, as it matches the query in the input context.\",\"action\":\"courses_toolset_search_courses\",\"action_input\":\"{\\\"query\\\":\\\"Recommend AI and ML courses\\\"}\"}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 955,
            "completion_tokens": 91,
            "total_tokens": 1046,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Fri, 03 Oct 2025 20:35:33 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"step\",\n          \"observation\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts, actions, and observations.\"\n    },\n    \"observation\": {\n      \"type\":
        \"string\",\n      \"description\": \"The result from the last action\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"observation\"\n  ]\n}\n```\n\nYour
        objective is: Process the observation from a tool and decide what to do next."},{"role":"user","content":"##
        Input Values\n```json\n{\n  \"input_context\": \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"query\\\":\\\"Recommend
        AI and ML courses\\\"}\",\n  \"history\": [\n    {\n      \"step\": 1,\n      \"thought\":
        \"The input context indicates a request to recommend courses related to AI
        and ML. Given that the history is empty, I should proceed directly with the
        available tool that can search for courses based on the provided query. The
        tool `courses_toolset_search_courses` is suitable for this task, as it matches
        the query in the input context.\",\n      \"action\": \"courses_toolset_search_courses\",\n      \"action_input\":
        \"{\\\"query\\\":\\\"Recommend AI and ML courses\\\"}\",\n      \"observation\":
        [\n        {\n          \"_type\": \"Course\",\n          \"id\": 1,\n          \"course_title\":
        \"Introduction to AI\",\n          \"description\": \"Learn the basics of
        Artificial Intelligence.\",\n          \"link\": \"https://example.com/intro-to-ai\"\n        },\n        {\n          \"_type\":
        \"Course\",\n          \"id\": 2,\n          \"course_title\": \"Advanced
        Machine Learning\",\n          \"description\": \"Deep dive into machine learning
        algorithms and techniques.\",\n          \"link\": \"https://example.com/advanced-ml\"\n        },\n        {\n          \"_type\":
        \"Course\",\n          \"id\": 3,\n          \"course_title\": \"Data Science
        Fundamentals\",\n          \"description\": \"Understand data analysis, visualization,
        and statistical methods.\",\n          \"link\": \"https://example.com/data-science-fundamentals\"\n        }\n      ]\n    }\n  ],\n  \"observation\":
        [\n    {\n      \"_type\": \"Course\",\n      \"id\": 1,\n      \"course_title\":
        \"Introduction to AI\",\n      \"description\": \"Learn the basics of Artificial
        Intelligence.\",\n      \"link\": \"https://example.com/intro-to-ai\"\n    },\n    {\n      \"_type\":
        \"Course\",\n      \"id\": 2,\n      \"course_title\": \"Advanced Machine
        Learning\",\n      \"description\": \"Deep dive into machine learning algorithms
        and techniques.\",\n      \"link\": \"https://example.com/advanced-ml\"\n    },\n    {\n      \"_type\":
        \"Course\",\n      \"id\": 3,\n      \"course_title\": \"Data Science Fundamentals\",\n      \"description\":
        \"Understand data analysis, visualization, and statistical methods.\",\n      \"link\":
        \"https://example.com/data-science-fundamentals\"\n    }\n  ]\n}\n```"}],"temperature":1.0,"response_format":{"type":"json_schema","json_schema":{"name":"dspy_output_1759523733","strict":true,"schema":{"type":"object","properties":{"interpretation":{"type":"string","description":"Interpretation
        of the observation"},"next_step":{"type":"string","enum":["continue","finish"],"description":"What
        to do next: ''#<DSPy::NextStep::Continue>'' or ''#<DSPy::NextStep::Finish>''"}},"required":["interpretation","next_step"],"additionalProperties":false}}}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '5383'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Oct 2025 20:35:35 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '1295'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1466'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '198908'
      X-Ratelimit-Reset-Requests:
      - 14.111s
      X-Ratelimit-Reset-Tokens:
      - 327ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 988f3a083a24c997-IAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CMgn0kpJqVeSa94DDzI4O3CjvR6iW",
          "object": "chat.completion",
          "created": 1759523734,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"interpretation\":\"The observation consists of three recommended courses that pertain to AI and ML, which aligns with the original query. These courses provide a range of information from basics to advanced concepts in the field of artificial intelligence and machine learning.\",\"next_step\":\"finish\"}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1056,
            "completion_tokens": 53,
            "total_tokens": 1109,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Fri, 03 Oct 2025 20:35:35 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"Your
        input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"input_context\": {\n      \"type\":
        \"string\",\n      \"description\": \"Serialized representation of all input
        fields\"\n    },\n    \"history\": {\n      \"type\": \"array\",\n      \"items\":
        {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_type\":
        {\n            \"type\": \"string\",\n            \"const\": \"HistoryEntry\"\n          },\n          \"step\":
        {\n            \"type\": \"integer\"\n          },\n          \"thought\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action\":
        {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"action_input\":
        {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\":
        \"number\"\n              },\n              {\n                \"type\": \"object\",\n                \"propertyNames\":
        {\n                  \"type\": \"string\"\n                },\n                \"additionalProperties\":
        {\n                  \"type\": \"string\"\n                },\n                \"description\":
        \"A mapping where keys are strings and values are strings\"\n              },\n              {\n                \"type\":
        \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\":
        \"null\"\n              }\n            ],\n            \"description\": \"Union
        of multiple types\"\n          },\n          \"observation\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"step\",\n          \"observation\"\n        ],\n        \"description\":
        \"DSPy::HistoryEntry struct\"\n      },\n      \"description\": \"Previous
        thoughts and actions, including observations from tools.\"\n    },\n    \"available_tools\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"AvailableTool\"\n          },\n          \"name\": {\n            \"type\":
        \"string\"\n          },\n          \"description\": {\n            \"type\":
        \"string\"\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"propertyNames\":
        {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"string\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are strings\"\n          }\n        },\n        \"required\":
        [\n          \"_type\",\n          \"name\",\n          \"description\",\n          \"schema\"\n        ],\n        \"description\":
        \"DSPy::ReAct::AvailableTool struct\"\n      },\n      \"description\": \"Array
        of available tools with their JSON schemas.\"\n    }\n  },\n  \"required\":
        [\n    \"input_context\",\n    \"history\",\n    \"available_tools\"\n  ]\n}\n```\n\nYour
        objective is: Generate a thought about what to do next to process the given
        inputs."},{"role":"user","content":"## Input Values\n```json\n{\n  \"input_context\":
        \"{\\\"_type\\\":\\\"AnonymousStruct\\\",\\\"query\\\":\\\"Recommend AI and
        ML courses\\\"}\",\n  \"history\": [\n    {\n      \"step\": 1,\n      \"thought\":
        \"The input context indicates a request to recommend courses related to AI
        and ML. Given that the history is empty, I should proceed directly with the
        available tool that can search for courses based on the provided query. The
        tool `courses_toolset_search_courses` is suitable for this task, as it matches
        the query in the input context.\",\n      \"action\": \"courses_toolset_search_courses\",\n      \"action_input\":
        \"{\\\"query\\\":\\\"Recommend AI and ML courses\\\"}\",\n      \"observation\":
        [\n        {\n          \"_type\": \"Course\",\n          \"id\": 1,\n          \"course_title\":
        \"Introduction to AI\",\n          \"description\": \"Learn the basics of
        Artificial Intelligence.\",\n          \"link\": \"https://example.com/intro-to-ai\"\n        },\n        {\n          \"_type\":
        \"Course\",\n          \"id\": 2,\n          \"course_title\": \"Advanced
        Machine Learning\",\n          \"description\": \"Deep dive into machine learning
        algorithms and techniques.\",\n          \"link\": \"https://example.com/advanced-ml\"\n        },\n        {\n          \"_type\":
        \"Course\",\n          \"id\": 3,\n          \"course_title\": \"Data Science
        Fundamentals\",\n          \"description\": \"Understand data analysis, visualization,
        and statistical methods.\",\n          \"link\": \"https://example.com/data-science-fundamentals\"\n        }\n      ]\n    }\n  ],\n  \"available_tools\":
        [\n    {\n      \"name\": \"courses_toolset_search_courses\",\n      \"description\":
        \"recommend courses related to the query\",\n      \"schema\": {\n        \"name\":
        \"courses_toolset_search_courses\",\n        \"description\": \"recommend
        courses related to the query\",\n        \"parameters\": {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"query\": {\n              \"type\":
        \"string\",\n              \"description\": \"Parameter query\"\n            }\n          },\n          \"required\":
        [\n            \"query\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```"}],"temperature":1.0,"response_format":{"type":"json_schema","json_schema":{"name":"dspy_output_1759523735","strict":true,"schema":{"type":"object","properties":{"thought":{"type":"string","description":"Reasoning
        about what to do next, considering the history and observations."},"action":{"type":"string","enum":["courses_toolset_search_courses","finish"],"description":"The
        action to take. MUST be one of the tool names listed in `available_tools`
        input, or the literal string \"finish\" to provide the final answer."},"action_input":{"type":"string","description":"Input
        for the chosen action. If action is a tool name, this MUST be a JSON object
        matching the tool''s schema. If action is \"finish\", this field MUST contain
        the final result based on processing the input data."}},"required":["thought","action","action_input"],"additionalProperties":false}}}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.openai.com
      X-Stainless-Arch:
      - arm64
      X-Stainless-Lang:
      - ruby
      X-Stainless-Os:
      - MacOS
      X-Stainless-Package-Version:
      - 0.22.1
      X-Stainless-Runtime:
      - ruby
      X-Stainless-Runtime-Version:
      - 3.3.6
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      X-Stainless-Retry-Count:
      - '0'
      X-Stainless-Timeout:
      - '600.0'
      Content-Length:
      - '6544'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Oct 2025 20:35:40 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - "<OPENAI_ORGANIZATION>"
      Openai-Processing-Ms:
      - '4852'
      Openai-Project:
      - proj_n52OL5vlzVaXGnYDaGWmVX5F
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '4865'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9997'
      X-Ratelimit-Remaining-Tokens:
      - '198736'
      X-Ratelimit-Reset-Requests:
      - 21.31s
      X-Ratelimit-Reset-Tokens:
      - 379ms
      X-Request-Id:
      - "<REQUEST_ID>"
      X-Openai-Proxy-Wasm:
      - v0.1
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=<REDACTED>
      - _cfuvid=<REDACTED>
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 988f3a14bfe4c997-IAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-CMgn1o7yFNuoc4lg5UlIpPJEBwElF",
          "object": "chat.completion",
          "created": 1759523735,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"thought\":\"Based on the observation from the previous action, three AI and ML courses have been retrieved: 'Introduction to AI', 'Advanced Machine Learning', and 'Data Science Fundamentals'. I need to summarize these findings for the user in a clear format, providing the course titles along with descriptions and links for further exploration. This will provide the user with a well-rounded recommendation tailored to their query.\",\"action\":\"finish\",\"action_input\":\"Here are some recommended courses on AI and ML:\\n1. **Introduction to AI**: Learn the basics of Artificial Intelligence. [Link](https://example.com/intro-to-ai)\\n2. **Advanced Machine Learning**: Deep dive into machine learning algorithms and techniques. [Link](https://example.com/advanced-ml)\\n3. **Data Science Fundamentals**: Understand data analysis, visualization, and statistical methods. [Link](https://example.com/data-science-fundamentals)\"}",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 1243,
            "completion_tokens": 189,
            "total_tokens": 1432,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_560af6e559"
        }
  recorded_at: Fri, 03 Oct 2025 20:35:40 GMT
recorded_with: VCR 6.3.1
